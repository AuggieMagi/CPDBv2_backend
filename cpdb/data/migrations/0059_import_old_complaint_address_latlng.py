# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-06-22 01:39
from __future__ import unicode_literals
from contextlib import contextmanager
from csv import DictReader
import re
import os
from tempfile import NamedTemporaryFile

from django.conf import settings
from django.db import migrations
from django.contrib.gis.geos import Point

from azure.storage.blob import BlockBlobService


@contextmanager
def csv_from_azure(filename):
    block_blob_service = BlockBlobService(
        account_name=settings.DATA_PIPELINE_STORAGE_ACCOUNT_NAME,
        account_key=settings.DATA_PIPELINE_STORAGE_ACCOUNT_KEY
    )
    tmp_file = NamedTemporaryFile(suffix='.csv', delete=False)
    block_blob_service.get_blob_to_path('csv', filename, tmp_file.name)
    csvfile = open(tmp_file.name)
    reader = DictReader(csvfile)
    yield reader
    csvfile.close()
    os.remove(tmp_file.name)


def import_data(apps, schema_editor):
    Allegation = apps.get_model('data', 'Allegation')

    with csv_from_azure('20180622_old_complaint_geocoded.csv') as reader:
        prog = re.compile(r'(\d+)\*\*')
        from tqdm import tqdm
        for row in tqdm(reader):
            try:
                allegation = Allegation.objects.get(crid=row['cr_id'])
            except Allegation.DoesNotExist:
                continue
            latlng = row['latlng'].split(' ')
            allegation.point = Point(float(latlng[1]), float(latlng[0]))
            allegation.old_complaint_address = prog.sub(r'\1XX', row['full_address'])
            allegation.save()


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0058_allegation_old_complaint_address'),
    ]

    operations = [
        migrations.RunPython(
                import_data,
                reverse_code=migrations.RunPython.noop,
                elidable=True),
    ]
