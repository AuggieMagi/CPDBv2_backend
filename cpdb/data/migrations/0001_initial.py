# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-07-06 04:07
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allegation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crid', models.CharField(blank=True, max_length=30)),
                ('summary', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, choices=[[b'01', b'Food Sales/Restaurant'], [b'02', b'Tavern/Liquor Store'], [b'03', b'Other Business Establishment'], [b'04', b'Police Building'], [b'05', b'Lockup Facility'], [b'06', b'Police Maintenance Facility'], [b'07', b'CPD Automotive Pound Facility'], [b'08', b'Other Police Property'], [b'09', b'Police Communications System'], [b'10', b'Court Room'], [b'11', b'Public Transportation Veh./Facility'], [b'12', b'Park District Property'], [b'13', b'Airport'], [b'14', b'Public Property - Other'], [b'15', b'Other Private Premise'], [b'16', b'Expressway/Interstate System'], [b'17', b'Public Way - Other'], [b'18', b'Waterway. Incl Park District'], [b'19', b'Private Residence']], max_length=20)),
                ('add1', models.IntegerField(null=True)),
                ('add2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('incident_date', models.DateTimeField(null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('source', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='AllegationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_code', models.CharField(max_length=255)),
                ('category', models.CharField(blank=True, max_length=255)),
                ('allegation_name', models.CharField(blank=True, max_length=255)),
                ('on_duty', models.BooleanField(default=False)),
                ('citizen_dept', models.CharField(choices=[(b'citizen', b'Citizen'), (b'dept', b'Dept'), (b'?', b'Unknown')], default=b'citizen', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('area_type', models.CharField(choices=[[b'beat', b'Beat'], [b'neighborhood', b'Neighborhood'], [b'school-grounds', b'School Grounds'], [b'ward', b'Ward'], [b'police-districts', b'Police District']], max_length=30)),
                ('polygon', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Complainant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, max_length=1)),
                ('race', models.CharField(blank=True, max_length=50)),
                ('age', models.IntegerField(null=True)),
                ('allegation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Allegation')),
            ],
        ),
        migrations.CreateModel(
            name='Investigator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_name', models.CharField(max_length=160)),
                ('name', models.CharField(max_length=160)),
                ('current_rank', models.CharField(blank=True, max_length=50)),
                ('current_report', models.CharField(blank=True, max_length=4)),
                ('agency', models.CharField(choices=[[b'IPRA', b'IPRA'], [b'IAD', b'IAD']], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='LineArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('linearea_type', models.CharField(choices=[[b'passageway', b'Passageway']], max_length=30)),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('gender', models.CharField(blank=True, max_length=1)),
                ('race', models.CharField(blank=True, max_length=50)),
                ('appointed_date', models.DateField(null=True)),
                ('rank', models.CharField(blank=True, choices=[[b'FTO', b'Field Training Officer'], [b'LT', b'Lieutenant'], [b'ET', b'Evidence Technician'], [b'DET', b'Detective'], [b'PO', b'Police Officer'], [b'Cpt', b'Captain'], [b'SGT', b'Sergeant'], [b'CMDR', b'Commander'], [b'Agent', b'Police Agent'], [b'Chief', b'Chief']], max_length=5)),
                ('birth_year', models.IntegerField(null=True)),
                ('active', models.CharField(choices=[[b'Yes', b'Active'], [b'No', b'Inactive'], [b'Unknown', b'Unknown']], default=b'Unknown', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OfficerAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_officer_id', models.IntegerField()),
                ('new_officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Officer')),
            ],
        ),
        migrations.CreateModel(
            name='OfficerAllegation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('officer_age', models.IntegerField(null=True)),
                ('recc_finding', models.CharField(blank=True, choices=[[b'UN', b'Unfounded'], [b'EX', b'Exonerated'], [b'NS', b'Not Sustained'], [b'SU', b'Sustained'], [b'NC', b'No Cooperation'], [b'NA', b'No Affidavit'], [b'DS', b'Discharged'], [b'ZZ', b'Unknown']], max_length=2)),
                ('recc_outcome', models.CharField(blank=True, choices=[[b'000', b'Violation Noted'], [b'001', b'1 Day Suspension'], [b'002', b'2 Day Suspension'], [b'003', b'3 Day Suspension'], [b'004', b'4 Day Suspension'], [b'005', b'5 Day Suspension'], [b'006', b'6 Day Suspension'], [b'007', b'7 Day Suspension'], [b'008', b'8 Day Suspension'], [b'009', b'9 Day Suspension'], [b'010', b'10 Day Suspension'], [b'011', b'11 Day Suspension'], [b'012', b'12 Day Suspension'], [b'013', b'13 Day Suspension'], [b'014', b'14 Day Suspension'], [b'015', b'15 Day Suspension'], [b'016', b'16 Day Suspension'], [b'017', b'17 Day Suspension'], [b'018', b'18 Day Suspension'], [b'019', b'19 Day Suspension'], [b'020', b'20 Day Suspension'], [b'021', b'21 Day Suspension'], [b'022', b'22 Day Suspension'], [b'023', b'23 Day Suspension'], [b'024', b'24 Day Suspension'], [b'025', b'25 Day Suspension'], [b'026', b'26 Day Suspension'], [b'027', b'27 Day Suspension'], [b'028', b'28 Day Suspension'], [b'029', b'29 Day Suspension'], [b'030', b'30 Day Suspension'], [b'045', b'45 Day Suspension'], [b'060', b'60 Day Suspension'], [b'090', b'90 Day Suspension'], [b'100', b'Reprimand'], [b'120', b'Suspended for 120 Days'], [b'180', b'Suspended for 180 Days'], [b'200', b'Suspended over 30 Days'], [b'300', b'Administrative Termination'], [b'400', b'Separation'], [b'500', b'Reinstated by Police Board'], [b'600', b'No Action Taken'], [b'700', b'Reinstated by Court Action'], [b'800', b'Resigned'], [b'900', b'Penalty Not Served'], [None, b'Unknown']], max_length=3)),
                ('final_finding', models.CharField(blank=True, choices=[[b'UN', b'Unfounded'], [b'EX', b'Exonerated'], [b'NS', b'Not Sustained'], [b'SU', b'Sustained'], [b'NC', b'No Cooperation'], [b'NA', b'No Affidavit'], [b'DS', b'Discharged'], [b'ZZ', b'Unknown']], max_length=2)),
                ('final_outcome', models.CharField(blank=True, choices=[[b'000', b'Violation Noted'], [b'001', b'1 Day Suspension'], [b'002', b'2 Day Suspension'], [b'003', b'3 Day Suspension'], [b'004', b'4 Day Suspension'], [b'005', b'5 Day Suspension'], [b'006', b'6 Day Suspension'], [b'007', b'7 Day Suspension'], [b'008', b'8 Day Suspension'], [b'009', b'9 Day Suspension'], [b'010', b'10 Day Suspension'], [b'011', b'11 Day Suspension'], [b'012', b'12 Day Suspension'], [b'013', b'13 Day Suspension'], [b'014', b'14 Day Suspension'], [b'015', b'15 Day Suspension'], [b'016', b'16 Day Suspension'], [b'017', b'17 Day Suspension'], [b'018', b'18 Day Suspension'], [b'019', b'19 Day Suspension'], [b'020', b'20 Day Suspension'], [b'021', b'21 Day Suspension'], [b'022', b'22 Day Suspension'], [b'023', b'23 Day Suspension'], [b'024', b'24 Day Suspension'], [b'025', b'25 Day Suspension'], [b'026', b'26 Day Suspension'], [b'027', b'27 Day Suspension'], [b'028', b'28 Day Suspension'], [b'029', b'29 Day Suspension'], [b'030', b'30 Day Suspension'], [b'045', b'45 Day Suspension'], [b'060', b'60 Day Suspension'], [b'090', b'90 Day Suspension'], [b'100', b'Reprimand'], [b'120', b'Suspended for 120 Days'], [b'180', b'Suspended for 180 Days'], [b'200', b'Suspended over 30 Days'], [b'300', b'Administrative Termination'], [b'400', b'Separation'], [b'500', b'Reinstated by Police Board'], [b'600', b'No Action Taken'], [b'700', b'Reinstated by Court Action'], [b'800', b'Resigned'], [b'900', b'Penalty Not Served'], [None, b'Unknown']], max_length=3)),
                ('final_outcome_class', models.CharField(blank=True, max_length=20)),
                ('allegation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Allegation')),
                ('allegation_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.AllegationCategory')),
                ('officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Officer')),
            ],
        ),
        migrations.CreateModel(
            name='OfficerBadgeNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.CharField(max_length=10)),
                ('current', models.BooleanField(default=False)),
                ('officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Officer')),
            ],
        ),
        migrations.CreateModel(
            name='OfficerHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Officer')),
            ],
        ),
        migrations.CreateModel(
            name='PoliceUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_name', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='PoliceWitness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, max_length=1)),
                ('race', models.CharField(blank=True, max_length=50)),
                ('allegation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Allegation')),
                ('officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Officer')),
            ],
        ),
        migrations.AddField(
            model_name='officerhistory',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.PoliceUnit'),
        ),
        migrations.AddField(
            model_name='officer',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.PoliceUnit'),
        ),
        migrations.AddField(
            model_name='investigator',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.PoliceUnit'),
        ),
        migrations.AddField(
            model_name='allegation',
            name='areas',
            field=models.ManyToManyField(to='data.Area'),
        ),
        migrations.AddField(
            model_name='allegation',
            name='beat',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='beats', to='data.Area'),
        ),
        migrations.AddField(
            model_name='allegation',
            name='investigator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='data.Investigator'),
        ),
        migrations.AddField(
            model_name='allegation',
            name='line_areas',
            field=models.ManyToManyField(to='data.LineArea'),
        ),
        migrations.AlterUniqueTogether(
            name='officeralias',
            unique_together=set([('old_officer_id', 'new_officer')]),
        ),
    ]
