version: 2

test_default: &test_default
  environment:
    - DJANGO_SETTINGS_MODULE: config.settings.circleci
    - DB_HOST: localhost
    - DB_USER: cpdb
    - DB_PASSWORD: password
    - DB_NAME: cpdb
  steps:
    - checkout
    - run: pip install --user -r requirements/test.txt
    - run: flake8
    - run: coverage run cpdb/manage.py test --noinput --nologcapture
    - run: coverage combine
    - run: coverage report --omit="/home/ubuntu/virtualenvs/*"
    - run: coveralls

jobs:
  build_backend:
    docker:
      - image: microsoft/azure-cli
    steps:
      - checkout
      - run:
          name: trigger build acr
          command: az acr build --registry cpdpacr --image cpdbdev/cpdbv2_backend:$CIRCLE_BRANCH .

  build_backend_with_tag:
    docker:
      - image: microsoft/azure-cli
    steps:
      - checkout
      - run: az acr build --registry cpdpacr --image cpdbdev/cpdbv2_backend:$CIRCLE_TAG .
      - run: az acr build --registry cpdpacr --image cpdbdev/cpdbv2_backend:latest .

  build_postgis:
    docker:
      - image: microsoft/azure-cli
    steps:
      - checkout
      - run: az acr build --registry cpdpacr --image cpdbdev/postgis:latest .

  test_staging:
    <<: *test_default
    docker:
      - image: cpdbdev/postgis:latest
        command: postgres
      - image: elasticsearch:5-alpine
      - image: selenium/standalone-chrome:3.11
      - image: cpdbdev/cpdbv2_backend:staging

  test:
    <<: *test_default
    docker:
      - image: cpdbdev/postgis:latest
        command: postgres
      - image: elasticsearch:5-alpine
      - image: selenium/standalone-chrome:3.11
      - image: cpdbdev/cpdbv2_backend:master

  deploy:
    docker:
      - image: cpdbdev/cpdbv2_backend:0.1.0
    environment:
      - ANSIBLE_HOST_KEY_CHECKING: False
    steps:
      - checkout
      - run:
          command: bin/circleci_deploy_staging
          no_output_timeout: 60m

  build_cpdpbot:
    machine: true
    steps:
      - checkout
      - run:
          name: Build cpdpbot image
          command: docker build -t cpdbdev/cpdpbot:$(cat docker/cpdpbot/VERSION) docker/cpdpbot
      - run:
          name: Test cpdpbot image
          command: docker run --rm cpdbdev/cpdpbot:$(cat docker/cpdpbot/VERSION) python -m cpdpbot.test
      - run:
          name: Push cpdpbot image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push cpdbdev/cpdpbot:$(cat docker/cpdpbot/VERSION)

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_postgis:
          filters:
            tags:
              ignore: /.*/
            branches:
              only:
                - master
                - staging
      - build_backend:
          filters:
            tags:
              ignore: /.*/
      - test_staging:
          requires:
            - build_backend
          filters:
            tags:
              ignore: /.*/
            branches:
              only: staging
      - test:
          requires:
            - build_backend
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore: staging

  build_tag:
    jobs:
      - build_backend_with_tag:
          filters:
            tags:
              only: /^v[\d\.]+$/
            branches:
              ignore: /.*/
      - test:
          requires:
            - build_backend_with_tag
          filters:
            tags:
              only: /^v[\d\.]+$/
            branches:
              ignore: /.*/

  test_deploy_cpdpbot:
    jobs:
      - build_cpdpbot
