version: 2
jobs:
  test:
    docker:
      - image: cpdbdev/cpdbv2_backend:0.1.0
      - image: cpdbdev/postgis:9.6-alpine
        command: postgres
      - image: elasticsearch:5-alpine
      - image: selenium/standalone-chrome:3.11
    environment:
      - DJANGO_SETTINGS_MODULE: config.settings.circleci
      - DB_HOST: localhost
      - DB_USER: cpdb
      - DB_PASSWORD: password
      - DB_NAME: cpdb
    steps:
      - checkout
      - run: pip install --user -r requirements/test.txt
      - run: flake8
      - run: coverage run cpdb/manage.py test --noinput --nologcapture
      - run: coverage combine
      - run: coverage report --omit="/home/ubuntu/virtualenvs/*"
      - run: coveralls
      - store_artifacts:
          path: /home/deploy/project/cpdb/test_visual_token_media

  deploy:
    docker:
      - image: cpdbdev/cpdbv2_backend:0.1.0
    environment:
      - ANSIBLE_HOST_KEY_CHECKING: False
    steps:
      - checkout
      - run:
          command: bin/circleci_deploy_staging
          no_output_timeout: 60m

  build_terraform:
    machine: true
    steps:
      - checkout
      - run:
          name: Build terraform image
          command: docker build -t cpdbdev/terraform docker/terraform  
      - run:
          name: Push terraform image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push cpdbdev/terraform

  build_cpdpbot:
    machine: true
    steps:
      - checkout
      - run:
          name: Build cpdpbot image
          command: docker build -t cpdbdev/cpdpbot:$(cat docker/cpdpbot/VERSION) docker/cpdpbot
      - run:
          name: Test cpdpbot image
          command: docker run --rm cpdbdev/cpdpbot:$(cat docker/cpdpbot/VERSION) python -m cpdpbot.test
      - run:
          name: Push cpdpbot image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push cpdbdev/cpdpbot:$(cat docker/cpdpbot/VERSION)

  deploy_cpdpbot:
    docker:
      - image: cpdbdev/terraform
    steps:
      - run:
          name: Import gpg private key
          command: |
            echo $GPG_PRIVATE_KEY > circleci.b64
            base64 -d circleci.b64 > circleci.gpg
            gpg --import circleci.gpg
            rm circleci.gpg
            rm circleci.b64
      - checkout
      - run: git secret reveal
      - run:
          name: Terraform apply
          command: |
            terraform init
            terraform apply -target kubernetes_replication_controller.cpdpbot_$CIRCLE_BRANCH -auto-approve -lock=true -var "cpdpbot_version=$(cat docker/cpdpbot/VERSION)"

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: staging

  test_deploy_cpdpbot:
    jobs:
      - build_terraform:
          filters:
            branches:
              only:
                - staging
                - master
      - build_cpdpbot
      - deploy_cpdpbot:
          requires:
            - build_cpdpbot
            - build_terraform
          filters:
            branches:
              only:
                - staging
                - master
