---
  - name: Ensure psycopg2 module installed
    apt: name={{ item }} update_cache={{ update_apt_cache }} state=latest
    with_items:
      - python-psycopg2
      - postgresql-9.4-postgis-2.2
      - postgresql-server-dev-9.4
    tags: packages

  - name: setup postgresql.conf file
    copy: src=postgresql.conf dest=/etc/postgresql/9.4/main/postgresql.conf owner=postgres group=postgres mode=0640

  - name: setup pg_hba file
    template:
      src: pg_hba.conf.j2
      dest: /etc/postgresql/9.4/main/pg_hba.conf
      owner: postgres
      group: postgres
      mode: 0640

  - name: reload postgres
    service: name=postgresql state=reloaded enabled=yes

  - name: Ensure the database exist
    postgresql_db: name={{ application_name }}
    become: true
    become_user: postgres

  - name: Ensure user has access to database
    postgresql_user:
      db={{ db_name }} name={{ db_user }} password={{ db_password }}
      priv=ALL role_attr_flags=SUPERUSER
    become: true
    become_user: postgres

  - name: Check if initial db dump is present
    stat: path={{ project_root_path }}/initial_dump.sql
    register: initial_dump_file

  - name: Dump initial data
    postgresql_db:
      name={{ application_name }}
      state=restore
      target={{ project_root_path }}/initial_dump.sql
    become: true
    become_user: postgres
    when: import_initial_db_dump and initial_dump_file.stat.exists

  - name: Clean up initial dump file
    file:
      path={{ project_root_path }}/initial_dump.sql
      state=absent
    when: import_initial_db_dump and initial_dump_file.stat.exists

  - name: Ensure numeracy has access to cpdb database on data tables
    postgresql_user:
      db={{ db_name }} name=numeracy password={{ numeracy_db_password }}
      priv={{numeracy_postgres_priv}}
    become: true
    become_user: postgres

  - name: Ensure notebook user has access to cpdb database on data tables
    postgresql_user:
      db={{ db_name }} name=notebook password={{ notebook_db_password }}
      priv={{notebook_postgres_priv}}
    become: true
    become_user: postgres
